SQLite

*.db, *.db3, *.sqlite, *.sqlite3

SELECT [ALL|DISTINCT] {*|столбец_1[, столбец_2]}
FROM таблица_1[, таблица_2]
WHERE условие
	==, =, !=, <>, >, <, <=, >=
	AND, OR
	выражение [NOT] BETWEEN начальное_значение AND конечное_значение
	выражение [NOT] LIKE шаблон_строки
		% - соотвует любым символам
		_ - соотвует любому одиночному символу
	выражение [NOT] GLOB регулярное_выражение
		*
		?
		.
		[ant]
		[A-Za-zА-Яа-я]  [0-9]
		[^0-9]
	выражение IS [NOT] NULL
	выражение [NOT] IN (набор_значений)
GROUP BY (сгруппировать по)
HAVING (условие)
ORDER BY название_столбец | номер_столбца [ASC | DESC]
LIMIT кол-во_строк OFFSET смещение
LIMIT [смещение,] кол-во_строк
		

INSERT INTO имя_таблицы [(столбец_1 [, столбец_2])]
VALUES(значение_1 [, значение_2])

INSERT INTO имя_таблицы [(вставляемый_список_столбцов)]
SELECT список_столбцов
FROM список_таблиц
WHERE условие


UPDATE имя_таблицы
SET столбец_1=выражение_1 [, столбец_2=значение_2]
[WHERE уловие]
	
	
DELETE FROM имя_таблицы
[WHERE условие]


разработчики логической базы данных
разработчики физической базы данных


SUM - сумма (только числа)
AVG - среднее арифметическое (только числа)
COUNT - количество
MIN - минимальное значение
MAX - максимальное значение


однострочный запрос: =, >, <, >=, <=
многострочные запросы: IN (NOT IN)
EXISTS

UNION, UNION ALL

models
	__init__.py
	database.py
	group.py
	lesson.py
	student.py
	
create_database.py
	
pip install faker

file:///D:/Python330/HTML/display/index.html?sities=2

templates
	home.html
	
	header.html
	main.html
	footer.html
	
	dialogs.html
	
	page.html
	about.html


	
Flask
Django

pip install flask

flsite
	first.py
	templates
		index.html
		about.html
		base.html
	static
		css
			style.css
		
	
http://127.0.0.1:5000/
http://127.0.0.1:5000/profile/admin/5

http://127.0.0.1:5000/contact?username=igor&email=igor%40gmail.com&message=mes


int - должны присутствовать только цифры
float - должны присутствовать числа с плавающей точкой
path - можно использовать любые допустимые символы URL + "/"

flash
get_flashed_messages()

import os
os.urandom(20).hex()	
	
from flsite.first import create_db
create_db()

tasks
	app.py
	static
	templates
		index.html
	
	
	
	
